---
fontsize: 12pt
geometry: margin=3cm
title: "01 - DICOM to BIDS"
number-sections: true
description: "Step by step description of how to get from DICOM files to necessary nifti-files in BIDS format"
image: ./images/01_dcm2bids/001_0_StartingScreen.png
categories: [MRI, DICOM, BIDS, Preprocessing, Neurodesk]
author: MG
date: 04/30/2025
---

# DICOM-Files

-   the raw files from the scanner are DICOM-Files
-   not really useful as we need .nifti files for our analysis ![DICOM-Files](./images/01_dcm2bids/001_1_DICOMS.png)

$\qquad\to$ first step is to transform the DICOM- to nifti-files

# From Dicom to nifti in BIDS format

Even though we often get the data from the scanner already in [BIDS](https://bids-specification.readthedocs.io/en/stable/introduction.html) format, there can be cases when you have to do this conversion by yourself. For this, you can either use [bidscoiner](#sec-bidscoiner), or a [script from Adam](#sec-script): `dcm2bids.sh` (You can find this script here: `/shared/website/dcm2bids.sh`).

*For both, you need access to [Neurodesk](/neurodesk/neurodesktop.qmd)!*

## About BIDS

Apart from a clear structure that is understandable (for other researchers as well) and standardized, the [BIDS](https://bids-specification.readthedocs.io/en/stable/introduction.html) format offers further advantages. For example, various [BIDS-Apps](https://bids.neuroimaging.io//tools/bids-apps.html) can perform different steps automatically (e.g. [fmriprep](run_fmriprep.qmd)), but they require the data to be [BIDS-valid](https://bids-standard.github.io/bids-validator/)).

# From Dicom to nifti in BIDS using bidscoiner {#sec-bidscoiner}

## bidscoin

First, you need to start through the bird-icon on the bottom left of neurodesk, navigate to `Neurodesk > All Applications > bidscoin` and select a version (the process has been tested with v4.6.0 & v4.6.1)

![](images/clipboard-404437105.png)

## Shell commands

After some time to load, it should look like this:

![](images/clipboard-1623492321.png)

Then you can follow this script (running the lines separately can help you find/fix potential problems! For potential problems also see the subsections below!):

``` bash
#!/bin/bash

# you can copypaste the following commands into the terminal window that is opened by BIDSCOINER

# define directories
sourceFolder=/home/jovyan/completion2/dcm
sortedFolder=/home/jovyan/completion2/dcm_sorted

# check the output of the source folder
ls -l $sourceFolder

# make the target directory with subdirectories
mkdir -p $sortedFolder

# change to the script folder
cd /home/jovyan/dicomsort/

# run the script
./DICOMsort.sh $sourceFolder $sortedFolder

# check the output of the target folder
ls -l $sortedFolder

# run bidsmapper
bidsmapper $sortedFolder /home/jovyan/completion2/bids
# note: in the intendedFor of the fieldmap, add func/sub-001_ses-1_xxx_bold.*

# once you are happy with the mapping, run bidscoiner
bidscoiner $sortedFolder /home/jovyan/completion2/bids
```

## bismapper

![](images/clipboard-3995624064.png){width="32%"}

Currently, to discover the data we need to delete the content of the "subprefix" field and then save the bids map in the default location. After this, run the same bidsmapper command again.

### Subject and session

![](images/clipboard-325791456.png){width="50%"}

Now the bidsmapper discovered everything, but the files are not named correctly.

Edit subject and session first.

Now we need to rename the files by clicking "Edit" next to every file.

### Editing file names: anatomical

![](images/clipboard-1483139836.png){width="50%"}

anatmprage -\> mprage in the "acq" filed

### Editing file names: functional

![](images/clipboard-103624418.png){width="50%"}

Edit the task name and acq field

Do this for every functional file

### Editing file names: fieldmap

![](images/bidsmapper_fmap.png){width="50%"}

Keep in mind, that we often need the option "epi" in the selection field of "suffix" (and not the "fieldmap" option)!

In the section "Metadata" you have to add which files should be selected for the "IntendedFor" field of the fieldmap. You can use a wildcard (\*) to select all respective functional runs: "func/sub-001\*\_bold.\*". This includes all files in the directory "func" that start with "sub-001" and somewhere in the filename include "\_bold.". Watch out if you have more than one session! Then you might need to specify the respective session as well, e.g. "func/sub-001_ses-3\*\_bold.\*"

## bidscoiner after renaming all files

Once you are happy with the naming of the files, run bidscoiner-command to do the actual conversion

## View files

![](images/clipboard-3124758617.png)

## MRICron

![](images/clipboard-2244027224.png){width="446"}

Now you can view the nifti files with any suitable software

# From Dicom to nifti in BIDS format with Adam's script {#sec-script}

## Preparations

### Setting up the directory structure {#sec-structure}

First, you need to set up the correct structure for the script to run properly later. For this, you:

1.  Create an empty directory named `bids` (right-click, `Create New... > Folder`)

2.  Create a directory (name can be anything, for example `dicoms`) and copy/paste your folder with the DICOM-Files in this directory![DICOM-Folder](./images/01_dcm2bids/02_dicomsFolder.png)

It should look like this:![Folder Structure](./images/01_dcm2bids/01_folder.png)

These two directories (`bids` & `dicoms`) **need to be there for the script to work**!

The directory `scrips` is not necessary for the script to run, but it may be helpful to gather and safe the scripts and notes that you need during the [process from your raw files to the "final" analysis](Overview_fromDICOMtoGLM.qmd).

### Naming of the nifti files

It is curcial for the [BIDS](https://bids-specification.readthedocs.io/en/stable/introduction.html) format, that the resulting nifti-files are named properly ([see here for the naming convention(s)](https://bids-specification.readthedocs.io/en/stable/common-principles.html#filenames)).

To ensure that [later](#sec-filename), it might be helpful to write down the proper names for the files *before* you start the process. This could be done in a simple .txt file, where you specify all the file-names. You can then just open this .txt file and copy/paste the file-names whenever you need them. To have everything at one place, you could save this file in your `scripts` folder as well.

#### Create a naming.txt {#sec-naming}

a)  navigate to your `scripts` folder, right-click, select `Create New > Empty File`![Create Empty File](./images/01_dcm2bids/14_0_CreateEmptyFile.png)

b)  assign a name (in this case `naming.txt`)![Assign Filename](./images/01_dcm2bids/14_1_AssignFileName.png)

c)  fill this text file with the proper, [BIDS-conform](https://bids-specification.readthedocs.io/en/stable/common-principles.html#filenames) names for the nifti files **and save**![Fill the textfile and save](./images/01_dcm2bids/14_2_FillTextfile.png)Now, you can just open this file [when you need to change the name of a nifti](#sec-filename).

## Starting the script {#sec-start}

a)  To start the script, you first need to know where the script `dcm2bids.sh` is. In this case it is here: `/home/jovyan/Website/scripts/dcm2bids.sh` (you can copy/paste this file to your directory from `/shared/website/dcm2bids.sh`, or directly access) ![Location of the Script](./images/01_dcm2bids/03_Script_dcm2bids.png)

b)  Navigate to the location of the script, right-click it, and select `Copy Path(s)` ![Copy Path(s)](./images/01_dcm2bids/04_CopyScriptPath.png)

c)  Open a Terminal (icon of a monitor at the bottom left of your screen):![Open a Terminal](./images/01_dcm2bids/open_terminal.gif)

d)  Type `ml freesurfer` and press enter

e)  Type `bash`, add a space, then right-click and select `Paste` to fill in the path to the script (or type in the path manually)![Commands to start the Script](./images/01_dcm2bids/06_0_Commands_dcm2bids.png)Press `enter` to start the script.

## (Installing all necessary packages)

It is possible (especially if you start the script for the first time), that some necessary packages are not installed. If this is the case, **the script will tell you**! If something is missing youÂ´ll be asked, if you want to install these packages. By typing in `y` and pressing `enter`, the package will get installed (you might have to do this for more than one package):![Missing Packages](./images/01_dcm2bids/06_1_packagesMissing.png)

If there is still a missing package after all "automatic" suggestions of packages to install, it is probably related to `dcm2bids_scaffold` (*but again, the script will "show" you that there is something missing*). In this case, type `pip install dcm2bids` and press *enter*![Install dcm2bids manually](./images/01_dcm2bids/06_2_installManually.png)

Now "restart" the script ([see 2.d + 2.e](#sec-start)): ![Restart the Script](./images/01_dcm2bids/06_3_restartScript.png)

## Preparation: Provide Input and Output Directory {#sec-preparation}

With all necessary packages installed, you are asked to provide the path to the nifti directory. It should look like this:![Start of the Process](./images/01_dcm2bids/07_Initial_dcm2bids.png)

Nifti directory means the directory/folder, where the nifti-files should be saved to. This is our (currently empty) bids folder [that we created in the beginning](#sec-structure).

a)  To indicate the nifti directory, we either type in the path manually, or get the path by navigating to the directory, right-clicking the bids directory and selecting `Copy Path(s)` ([same procedure as when we needed the path of the script](#sec-start))

b)  go back to the terminal window where `dcm2bids` is running

c)  right-click and select `Paste` to enter the path

d)  press enter

Subsequently, you are asked to indicate the dicom directory.

$\to$ Repeat the steps a)-d) for the dicom directory where your dicoms are stored ([that we also created in the beginning](#sec-structure))

When both paths are set, you are asked to choose a dicom name (basically the files of a participant; in this case, there is only one scanning-session, but if you have more than one subject, you can select the one that you want do process) and it should look like this:![Select Name](./images/01_dcm2bids/09_PathsSet_And_SelectSubject.png)

After selecting a subject/dicom name (Press `enter`), the script automatically suggest a BIDS "subject id" and asks if it is correct (*Watch out!* Generally the suggested ID is not [BIDS-conform](https://bids-specification.readthedocs.io/en/stable/common-principles.html#filenames)!)![Suggested Subject Name](./images/01_dcm2bids/10_IncorrectSubjName.png)

For your data to be [BIDS-conform](https://bids-specification.readthedocs.io/en/stable/common-principles.html#filenames) at the end, the "subject id" has to have a structure like this: sub-001, sub-002,... (All necessary information about BIDS can be found [here](https://bids-specification.readthedocs.io/en/stable/introduction.html))

If the suggested name is correct, type in `y` and press `enter`.

If it is not correct, type in `n`, press `enter` and type in a/the correct subject id![Enter correct subject id](./images/01_dcm2bids/11_ChangeName.png) Once again, press `enter`

As a last preparative step, you are asked, if you would like to change the session folder from `ses-1` to another session. If you only have one session, type `n` and press `enter`![Keep Ses-1](./images/01_dcm2bids/12_SelectSession.png)

If you want to change the session, type `y` and provide the name of the sessions (*Important*: to have/get a [BIDS-conform](https://bids-specification.readthedocs.io/en/stable/common-principles.html#filenames) structure at the end, subdirectories for sessions have to be named `ses-x` with `x` being a number)

Subsequently, you get a short reminder in which directories your files should be stored.![Reminder before Start](./images/01_dcm2bids/13_Start.png)

By pressing `enter`, the script starts to convert your dicom files to nifti's. *This can take a few seconds - be patient!*

## Assigning nifti's to directories and adjusting file names

After the script converts the dicom's to nifti's, we have to potentially correct automatically assigned names and assign a directory. At the top of the terminal, you always see how many dicoms are left to categorize.

### Possible Actions to perform for a dicom {#sec-filename}

![Actions for a dicom](./images/01_dcm2bids/14_ActionsNamingFiles.png)

You can select one of three options for any dicom file (*use up-/down arrow key to switch between the options and press enter to confirm your choice*):

a)  `Keep`: By selecting this option, you tell the script that the suggested name is correct and that you want to assign this file with the shown name to a directory (*Since BIDS uses a specific* [naming convention](https://bids-specification.readthedocs.io/en/stable/common-principles.html#filenames)*, youÂ´ll probably need this option only for "additional files", like files related to denoising, that will be placed in a directory that is more or less independent of the BIDS-Format*; see @sec-extra\*)

b)  `Modify Name`: This option tells the script that you want to change the suggested name. This is needed, when the suggested name is not [BIDS-conform](https://bids-specification.readthedocs.io/en/stable/common-principles.html#filenames). After selecting this option (by pressing `enter`), you are asked to edit the name. Change the name (first delete the suggested one) to a [BIDS-conform filename](https://bids-specification.readthedocs.io/en/stable/common-principles.html#filenames) (*Hint: the initially suggested name implies what type of scan it was, so you should be able to easily determine if it was an anatomical scan, which run of a functional scan, or the fieldmap*). Using a [previously created file with bids-conform names](#sec-naming) can help avoiding errors and typos here, by just copy/pasting the prepared filenames! After you changed the name, press `enter` to confirm![Modyfing the Filename](./images/01_dcm2bids/15_modifyNames.png)

c)  `Delete (Do not convert)`: As the name suggests, selecting this option deletes the mentioned file (thus, there will be no corresponding nifti-file!). One case when this is generally used is for the `anat-scout` scan that is irrelevant for the preprocessing and analysis, since it is a short scan at the beginning of a scanning session to ensure a proper position of the participant and to adjust the parameters for the actual scans.

### Assigning a file to a directory {#sec-directory}

After either keeping or modifying the name, you are asked to assign the file to a directory.![Assign File to Directory](./images/01_dcm2bids/16_folderOptions.png)

You can either:

a)  `Keep folder name`: By selecting this option, you accept the suggested directory. In general, the correct directory is already suggested for most files (anatomical $\to$ `anat`, functional $\to$ `func`, fieldmap $\to$ `fmap`)

b)  `Modify folder name`: This option is only needed for files that were acquired "additionally", for example, when a denoising sequence was used (files with `.ph` at the end, [see here](#sec-extra)). As for the file name, you can edit the name of the directory after selecting this option. Entering a new/unique name for the directory here will result in an additional sub-directory in the subsequent [BIDS-directory](#sec-bidsdirectory) (if you enter the same name for all "additional" files, they will all be stored in this specified directory)

### The "extra" directory {#sec-extra}

Sometimes we acquire files that are not part of the [BIDS](https://bids-specification.readthedocs.io/en/stable/introduction.html)-Format (and, more importantly, are not used by [BIDS-Apps](https://bids.neuroimaging.io//tools/bids-apps.html)), for example when running a denoising sequence during acquisition of the data. In the example of a denoising sequence, corresponding files are named with `_ph` at the end. [When asked about the filename](#sec-filename), we can just keep it as it is, since we use these files separately anyway.![Keep Name of additional Files](./images/01_dcm2bids/17_Optional_DenoisingFiles.png)

**Important!!**

Those files have to be stored in a different directory! Thus, [when asked about where to assign the file](#sec-directory), we select `Modify folder name`. All "additional" files can be saved in a directory named `extra` ($\to$ edit the name of the directory to `extra` and press `enter`)![Assign File to Folder "extra"](./images/01_dcm2bids/18_Optional_newOrRenameFolder.png)

After assigning the last file to its directory, youÂ´ll see the information, that an additional file has been created, [which we will use later](#sec-IntendedFor). The script has finished:![This is how it looks when the script has finished](./images/01_dcm2bids/19_EndOfdcm2bids.png)

# The resulting BIDS-directory {#sec-bidsdirectory}

This is how your bids-directory (which was initially created as an empty directory) should look like:![Resulting bids-directory](./images/01_dcm2bids/20_resultingBIDSfolder.png)

When you enter the `sub-999` directory, youÂ´ll find the sub-directory `ses-1` (or whatever session you specified during the [preparation](#sec-preparation)). Inside, all sub-directories [that you selected/edited to assign the files to](#sec-directory) are listed:![Sub-Directories in ses-1](./images/01_dcm2bids/21_BIDS_ses1.png)

Each of these sub-directories contains all the files that you assigned, including the `.nii.gz` and a `.json` file![Content of the func directory](./images/01_dcm2bids/22_BIDS_funcs.png)![Content of the fmap directory](./images/01_dcm2bids/23_BIDS_fmap.png)![Content of the anat directory](./images/01_dcm2bids/24_BIDS_anat.png)![Content of the extra directory](./images/01_dcm2bids/25_BIDS_extra.png)

# Congratuliations, you did it!

***Congratulations***! You successfully finished the process of converting your DICOM to nifti files in BIDS-Format and you are one step closer to analyzing your data!

Please return to the [Overview-Page](Overview_fromDICOMtoGLM.qmd) to check what to do next.

Alternatively, here is a list of potential next steps to continue with

1.  [Check the "IntendedFor" field of the fmap's JSON file](check_IntendedFor_field.qmd)

2.  [Provide participants with their T1w-file?](ProvidingParticipantsWithTheirT1wFile.qmd)

3.  [Defacing](defacing.qmd)

4.  [Remove Denoising Scans from your data?](RemoveDenoisingScan.qmd)

5.  [fmriprep](run_fmriprep.qmd)
