{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "fontsize: 12pt\n",
        "geometry: margin=3cm\n",
        "title: Retinotopic Mapping\n",
        "description: \"Procedure to apply the probabilistic retinotopic mapping using the Benson Atlas\"\n",
        "#image: ./images/clipboard-3427974075.png\n",
        "categories: [MRI, Retinotopy]\n",
        "author: MG\n",
        "date: 05/05/2025\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "Retinotopic mapping is used to individually identify subregions in the visual cortex (i.e V1, V2, V3 and sometimes higher areas as well). This is then used to better understand how visual information is processed in the brain by different regions.\n",
        "\n",
        "Normally, this is achieved by implementing dedicated \"retinotopy-runs\" in the experimental design. However, this is not always possible.\n",
        "\n",
        "The Benson2014 atlas allows to get a retinotopic mapping even without dedicated \"retinotopy-runs\" by using structural features and probabilistic maps.\n",
        "\n",
        "# The script\n",
        "\n",
        "The script to run the probabilistic retinotopic mapping can be found on the server: `/shared/website/occatlas.sh`\n",
        "\n",
        "Alternatively, you can copy/paste the code (after adapting it for your data! See below):\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{bash}\n",
        "#!/usr/bin/env bash\n",
        "\n",
        "# This script demonstrates how to run Benson's neuropythy atlas on neurodesk\n",
        "# and map early visual areas onto the subject's functional volume space\n",
        "# NZ 2025.03.21\n",
        "\n",
        "# define variables and make dirs\n",
        "ml freesurfer/7.4.1 # tested with fs 7.4.1\n",
        "sid=999\n",
        "niidir=/home/jovyan/completion/4_conditions_main/bids\n",
        "export SUBJECTS_DIR=$niidir/derivatives/fmriprep/sourcedata/freesurfer\n",
        "export SINGULARITYENV_SUBJECTS_DIR=$SUBJECTS_DIR # this is container-specific definition of SUBJECTS_DIR\n",
        "export APPTAINERENV_SUBJECTS_DIR=$SUBJECTS_DIR   # this is container-specific definition of SUBJECTS_DIR\n",
        "mkdir -p /home/jovyan/completion/4_conditions_main/bids/neuropythy_tmp\n",
        "show=yes # show images: yes or no\n",
        "do_volumetric=no # run volumetric (surf2vol) part: yes or no\n",
        "\n",
        "# run benson's occipital atlas docker as singularity container\n",
        "tmpdir=/home/jovyan/completion/4_conditions_main/bids/neuropythy_tmp\n",
        "singularity run -B $SUBJECTS_DIR:/subjects \\\n",
        "  -B $tmpdir:/data docker://nben/neuropythy \\\n",
        "  atlas --verbose sub-$sid\n",
        "\n",
        "if [ \"$show\" = \"yes\" ]; then\n",
        "  # take a look at the data\n",
        "  freeview \\\n",
        "    -f $SUBJECTS_DIR/sub-$sid/surf/lh.inflated:overlay=$SUBJECTS_DIR/sub-$sid/surf/lh.benson14_varea.mgz:overlay_color=colorwheel \\\n",
        "    -f $SUBJECTS_DIR/sub-$sid/surf/rh.inflated:overlay=$SUBJECTS_DIR/sub-$sid/surf/rh.benson14_varea.mgz:overlay_color=colorwheel\n",
        "fi\n",
        "\n",
        "# run volumetric projection if enabled\n",
        "if [ \"$do_volumetric\" = \"yes\" ]; then\n",
        "\n",
        "  # surf2vol\n",
        "  mkdir -p $niidir/derivatives/rois/sub-$sid\n",
        "\n",
        "  # loop over hemis\n",
        "  for hemi in lh rh; do\n",
        "\n",
        "    # convert to t1 space first\n",
        "    mri_surf2vol \\\n",
        "      --surfval $SUBJECTS_DIR/sub-$sid/surf/$hemi.benson14_varea.mgz \\\n",
        "      --temp $SUBJECTS_DIR/sub-$sid/mri/orig.mgz \\\n",
        "      --identity sub-$sid \\\n",
        "      --o $niidir/derivatives/rois/sub-$sid/$hemi.sub-${sid}_benson14_varea_space-T1.nii.gz \\\n",
        "      --fill-projfrac -0.5 1.5 0.05 \\\n",
        "      --subject \"sub-$sid\" \\\n",
        "      --hemi $hemi\n",
        "\n",
        "    if [ \"$show\" = \"yes\" ]; then\n",
        "      freeview \\\n",
        "        $SUBJECTS_DIR/sub-$sid/mri/orig.mgz \\\n",
        "        $niidir/derivatives/rois/sub-$sid/$hemi.sub-${sid}_benson14_varea_space-T1.nii.gz:colormap=LUT\n",
        "    fi\n",
        "\n",
        "    # now convert from T1 to BOLD space\n",
        "    mri_vol2vol \\\n",
        "      --mov $niidir/derivatives/rois/sub-$sid/$hemi.sub-${sid}_benson14_varea_space-T1.nii.gz \\\n",
        "      --targ $niidir/derivatives/fmriprep/sub-$sid/ses-1/func/*task-loc*space-T1w_boldref.nii.gz \\\n",
        "      --o $niidir/derivatives/rois/sub-$sid/$hemi.sub-${sid}_benson14_varea_space-bold.nii.gz \\\n",
        "      --regheader \\\n",
        "      --nearest\n",
        "\n",
        "    if [ \"$show\" = \"yes\" ]; then\n",
        "      freeview \\\n",
        "        $niidir/derivatives/fmriprep/sub-$sid/ses-1/func/*task-loc*space-T1w_boldref.nii.gz \\\n",
        "        $niidir/derivatives/rois/sub-$sid/$hemi.sub-${sid}_benson14_varea_space-bold.nii.gz:colormap=LUT\n",
        "    fi\n",
        "\n",
        "    # binarize the labels\n",
        "    mri_binarize \\\n",
        "      --i $niidir/derivatives/rois/sub-$sid/$hemi.sub-${sid}_benson14_varea_space-bold.nii.gz \\\n",
        "      --match 1 2 3 --o \"$niidir/derivatives/rois/sub-$sid/$hemi.sub-${sid}_evc_space-bold.nii.gz\"\n",
        "\n",
        "  done\n",
        "\n",
        "  # unite hemispheres and binarize again\n",
        "  mri_concat \\\n",
        "    --i $niidir/derivatives/rois/sub-$sid/lh.sub-${sid}_evc_space-bold.nii.gz \\\n",
        "    --i $niidir/derivatives/rois/sub-$sid/rh.sub-${sid}_evc_space-bold.nii.gz \\\n",
        "    --sum \\\n",
        "    --o $niidir/derivatives/rois/sub-$sid/sub-${sid}_evc_space-bold.nii.gz\n",
        "\n",
        "fi\n",
        "\n",
        "# the rest should probably be done in python, thresholding values on the fly\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# Necessary adaptiation steps\n",
        "\n",
        "1.  Change the variable `sid` to match the subject you want to process (*only the number is necessary*! In the script it will be implemented as `sub-sid`)\n",
        "\n",
        "2.  Change the variable `niidir` to match the path to your BIDS-directory\n",
        "\n",
        "3.  Optional (you can look at the output later anyway): Change the variable `show` to see the intermediate steps ($\\to$ `show=yes` vs. `show=no`)\n",
        "\n",
        "4.  Indicate if you use volumentric (`do_volumetric=yes`) oder surface data (`do_volumentric=no`) in your later analysis\n",
        "\n",
        "5.  Save your changes\n",
        "\n",
        "6.  Run the script $\\to$ open a terminal and execute:\n",
        "\n",
        "<!-- -->\n",
        "\n",
        "a)  `bash /Path/to/occatlas.sh`\n",
        "b)  change the working directory to where the script is using `cd /Path/to/directory/with/script` and then `bash ./occatlas.sh`"
      ],
      "id": "e2f71aee"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}